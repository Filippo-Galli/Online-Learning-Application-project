use flake

VENV=".venv"
KERNEL_NAME="$(basename $PWD)-venv"
REQUIREMENTS_HASH_FILE="$VENV/.requirements_hash"

# Check Python availability (required by nix develop)
if ! command -v python >/dev/null 2>&1; then
  echo "‚ùå Python non trovato nel PATH. Hai dimenticato di eseguire 'nix develop'?"
  exit 1
fi

# Create virtual environment if not present
if [ ! -d "$VENV" ]; then
  echo "üì¶ Creazione virtualenv in $VENV"
  python -m venv "$VENV"
fi

# Activate virtualenv
source "$VENV/bin/activate"

# Install or update requirements if needed
if [ -f requirements.txt ]; then
  NEW_HASH=$(sha256sum requirements.txt | cut -d ' ' -f1)

  if [ ! -f "$REQUIREMENTS_HASH_FILE" ] || [ "$NEW_HASH" != "$(cat "$REQUIREMENTS_HASH_FILE")" ]; then
    echo "üì• Installazione/aggiornamento requirements"
    pip install --upgrade pip
    
    # Install packages with proper compilation flags for C extensions
    echo "üîß Installing packages with system library support..."
    pip install -r requirements.txt --force-reinstall --no-cache-dir
    
    echo "$NEW_HASH" > "$REQUIREMENTS_HASH_FILE"

    echo "üîÑ Registrazione kernel Jupyter ($KERNEL_NAME)"
    python -m ipykernel install --user --name "$KERNEL_NAME" --display-name "Python ($KERNEL_NAME)"
  fi
fi

# Always ensure kernel is registered if ipykernel is present
if pip show ipykernel >/dev/null 2>&1; then
  python -m ipykernel install --user \
    --name "$KERNEL_NAME" \
    --display-name "Python ($KERNEL_NAME)" \
    --force
  echo "‚úÖ Kernel Jupyter aggiornato: $KERNEL_NAME"
fi

# Verify ZMQ installation
if python -c "import zmq" 2>/dev/null; then
  echo "‚úÖ ZMQ successfully loaded"
else
  echo "‚ö†Ô∏è  ZMQ import failed - trying to fix..."
  pip install --force-reinstall --no-cache-dir pyzmq
fi